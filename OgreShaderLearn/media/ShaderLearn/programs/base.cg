struct VS_IN
{
	float4 position		: POSITION;
	float3 normal		: NORMAL;
	float2 tcoord		: TEXCOORD0;
};

struct VS_OUT
{
	float4 position		: POSITION;
	float2 tcoord		: TEXCOORD0;
};

uniform mat4x4 matWV;
uniform mat4x4 matWVP;
uniform float4 gdiffuse;
uniform float4 gspecular ;
uniform float4 gambient;

VS_OUT main_vs(VS_IN In)
{
    VS_OUT Out = (VS_OUT)0;
    
    // transfrom
    Out.position = mul(In.position, matWVP);

    //copy tcoord
    Out.tcoord = In.tcoord;
    return Out;
}


struct PS_IN
{
	float4 position		: SV_POSITION;
    float2 tcoord : TEXCOORD0;
};

struct PS_OUT
{
    float4 color	: COLOR0;
};

uniform sampler2D tex_diffuse : register(s0);

PS_OUT main(PS_IN In)
{
    PS_OUT Out;
    Out.color = tex2D(tex_diffuse, In.tcoord);
    return Out;
}